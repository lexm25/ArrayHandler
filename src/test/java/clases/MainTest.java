/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clases;

import static org.junit.jupiter.api.Assertions.assertTrue;

import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintStream;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.MethodOrderer.MethodName;

import com.thoughtworks.qdox.JavaDocBuilder;
import com.thoughtworks.qdox.model.JavaSource;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;

/**
 * Esta clase esta preparada para testear el programa main principal de un proyecto
 * interceptando y suplantando tando la entrada como la salida estandar teclado
 * y pantalla
 * @author eserrano
 *
 */
@TestMethodOrder(MethodName.class)
public class MainTest {
	
	private final PrintStream standardOut = System.out;
	private final ByteArrayOutputStream outputStreamCaptor = new ByteArrayOutputStream();
	
	@BeforeEach
	public void setUp() {
	    System.setOut(new PrintStream(outputStreamCaptor));
	}
	
	@Test
	@DisplayName("Compilaci√≥n")
	/**
	 * Compila
	 */
	public void test00RequisitosBasicos() {
		assertTrue(true);
		
		String fileFullPath = "src/main/java/clases/IntArrayHandler.java";
        JavaDocBuilder builder = new JavaDocBuilder();
        try {
			builder.addSource(new FileReader( fileFullPath  ));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			assertTrue(false);
		}

        JavaSource src = builder.getSources()[0];
        String[] imports = src.getImports();

        for ( String imp : imports )
        {
            if(imp.endsWith(".Arrays"))
            	assertTrue(false);
        }
	}
	
//	@Test
//	@DisplayName("Hola Mundo")
//	/**
//	 * toString
//	 */
//	public void test01() {
//		//Scanner lectorSalida = new Scanner(salida);
//		Main.main(null);
//		assertEquals("Hola Mundo", outputStreamCaptor.toString().trim()/*lectorSalida.nextLine()*/);
//		//lectorSalida.close();
//	}

	@AfterEach
	public void tearDown() {
	    System.setOut(standardOut);
	}
	

}